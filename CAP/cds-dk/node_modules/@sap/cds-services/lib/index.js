const publicAPI = {
  get service () {
    const service = require('./services/service_factory')
    Object.defineProperty(publicAPI, 'service', { value: service })
    return service
  },
  for (service) {
    return require('./services/client/for')(service)
  },
  to: {
    local (service) {
      return require('./services/client/to')(service)
    },
    odata_v4 (service) {
      return require('./adapter/odata-v4/to')(service)
    },
    rest (service) {
      return require('./adapter/rest/to')(service)
    }
  },
  passport (...args) {
    return require('./adapter/auth/passport')(...args)
  },
  performanceMeasurement (...args) {
    return require('./adapter/perf/performanceMeasurement')(...args)
  },
  get connect () {
    const singleton = require('./connect/singleton')
    Object.defineProperty(publicAPI, 'connect', { value: singleton })
    return singleton
  },
  get statements () {
    const statements = require('./statements/index')
    Object.defineProperty(publicAPI, 'statements', { value: statements })
    return statements
  },
  get Service () {
    const Service = require('./connect/Service')
    Object.defineProperty(publicAPI, 'Service', { value: Service })
    return Service
  },
  inject (...args) {
    require('./cds').inject(...args)
    return this
  },
  get Client () {
    const Client = require('./connect/Service')
    Object.defineProperty(publicAPI, 'Client', { value: Client })
    return Client
  },
  get Provider () {
    const Provider = require('./services/Service')
    Object.defineProperty(publicAPI, 'Provider', { value: Provider })
    return Provider
  },
  get Handler () {
    const Handler = require('./services/hooks/Base')
    Object.defineProperty(publicAPI, 'Handler', { value: Handler })
    return Handler
  }
}

module.exports = publicAPI

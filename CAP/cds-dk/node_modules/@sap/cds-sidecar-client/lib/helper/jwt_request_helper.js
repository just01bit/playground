const got = require('got');
const { URL } = require('url');
const clientLog = require('./logging');
const path = require('path');

const OAUTH_PATH = '/mtx/v1/oauth/token';

class JwtRequestHelper {

    static __getTokenUrl(appUrl, passcode, subdomain) {
        const parsedUrl = new URL(appUrl);
        parsedUrl.pathname = path.join(parsedUrl.pathname, OAUTH_PATH);
        if (passcode) {
            parsedUrl.searchParams.set('passcode', passcode);
        }
        parsedUrl.searchParams.set('subdomain', subdomain);
        return parsedUrl;
    }

    static async getToken(appUrl, { username, password, subdomain, passcode }) {

        const tokenUrl = JwtRequestHelper.__getTokenUrl(appUrl, passcode, subdomain);

        clientLog.debug(null, 'Getting token from url ' + tokenUrl.toString());
        const options = {

            method: 'GET',
            query: {
                type: 'json',
                subdomain: subdomain,
                passcode: passcode
            },
            json: true
        };

        const tokenResponse = await got(tokenUrl, options);
        return tokenResponse;
    }

}

module.exports = JwtRequestHelper;
"use strict";
/*!
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var cloud_sdk_util_1 = require("@sap/cloud-sdk-util");
var logger = cloud_sdk_util_1.createLogger({
    package: '@sap/cloud-sdk-core',
    messageContext: 'odata-request-config'
});
/**
 * @hidden
 */
var ODataRequestConfig = /** @class */ (function () {
    /**
     * Creates an instance of ODataRequest.
     *
     * @param method HTTP method of the request
     * @param defaultServicePath default path of the according service
     * @param contentType The content type of the request
     */
    function ODataRequestConfig(method, defaultServicePath, contentType) {
        if (contentType === void 0) { contentType = 'application/json'; }
        this.method = method;
        this.defaultServicePath = defaultServicePath;
        this.contentType = contentType;
        this._customHeaders = {};
        if (defaultServicePath === cloud_sdk_util_1.VALUE_IS_UNDEFINED) {
            logger.warn('The service path is undefined in "_defaultServicePath".');
        }
    }
    Object.defineProperty(ODataRequestConfig.prototype, "customHeaders", {
        get: function () {
            return this._customHeaders;
        },
        set: function (headers) {
            this._customHeaders = {};
            this.addCustomHeaders(headers);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Add custom headers to the request. This is useful in case you want to provide your own authorization headers for example.
     *
     * @param headers Key-value pairs where the key is the name of a header property and the value is the respective value
     */
    ODataRequestConfig.prototype.addCustomHeaders = function (headers) {
        var _this = this;
        Object.entries(headers).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            // enforce lower case as HTTP headers are case-insensitive
            _this.customHeaders[key.toLowerCase()] = value;
        });
    };
    ODataRequestConfig.prototype.prependDollarToQueryParameters = function (params) {
        return Object.entries(params).reduce(function (newParams, _a) {
            var key = _a[0], value = _a[1];
            newParams["$" + key] = value;
            return newParams;
        }, {});
    };
    return ODataRequestConfig;
}());
exports.ODataRequestConfig = ODataRequestConfig;
//# sourceMappingURL=odata-request-config.js.map
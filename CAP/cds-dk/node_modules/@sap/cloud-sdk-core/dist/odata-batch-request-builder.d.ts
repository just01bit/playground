/*!
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { MapType } from '@sap/cloud-sdk-util';
import { BatchResponse } from './batch-response';
import { Constructable } from './constructable';
import { Entity } from './entity';
import { ODataBatchChangeSet } from './odata-batch-change-set';
import { CreateRequestBuilder, DeleteRequestBuilder, GetAllRequestBuilder, GetByKeyRequestBuilder, MethodRequestBuilderBase, ODataRequestConfig, UpdateRequestBuilder } from './request-builder';
import { ODataBatchConfig } from './request-builder/request/odata-batch-config';
import { Destination, DestinationNameAndJwt, DestinationOptions } from './scp-cf';
/**
 * The OData batch request builder to build a batch, which consists of an ordered retrieve requests or change sets.
 *
 */
export declare class ODataBatchRequestBuilder extends MethodRequestBuilderBase<ODataBatchConfig> {
    readonly defaultServicePath: string;
    readonly requests: Array<ODataBatchChangeSet<CreateRequestBuilder<Entity> | UpdateRequestBuilder<Entity> | DeleteRequestBuilder<Entity>> | GetAllRequestBuilder<Entity> | GetByKeyRequestBuilder<Entity>>;
    readonly entityToConstructorMap: MapType<Constructable<Entity>>;
    /**
     * Creates an instance of ODataBatchRequestBuilder.
     *
     * @param defaultServicePath Service path
     * @param requests An array of retrieve requests or change sets
     * @param entityToConstructorMap A map that holds the entity type to constructor mapping
     */
    constructor(defaultServicePath: string, requests: Array<ODataBatchChangeSet<CreateRequestBuilder<Entity> | UpdateRequestBuilder<Entity> | DeleteRequestBuilder<Entity>> | GetAllRequestBuilder<Entity> | GetByKeyRequestBuilder<Entity>>, entityToConstructorMap: MapType<Constructable<Entity>>);
    /**
     * Execute the given request and return the according promise. Please notice: The sub-requests may fail even the main request is successful.
     *
     * @param destination Targeted destination on which the request is performed.
     * @param options Options to employ when fetching destinations.
     * @returns {Promise<ReadResponse[]>} Promise resolving to the requested data.
     */
    execute(destination: Destination | DestinationNameAndJwt, options?: DestinationOptions): Promise<BatchResponse[]>;
    private detectLineBreak;
}
/**
 * Generate the request line, containing method, url and http version from the request builder, e.g.:
 * GET /sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartnerAddress?$format=json&$top=1 HTTP/1.1
 * @param requestBuilder Reqeust builder holds the request information.
 * @returns the generated request line.
 */
export declare function getRequestLine(requestBuilder: MethodRequestBuilderBase<ODataRequestConfig>): string;
//# sourceMappingURL=odata-batch-request-builder.d.ts.map
/*!
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import { Entity } from '../entity';
import { Field } from '../selectable';
import { BooleanFilterFunction } from './boolean-filter-function';
import { FilterFunctionParameterType } from './filter-function';
import { NumberFilterFunction } from './number-filter-function';
import { StringFilterFunction } from './string-filter-function';
/**
 * Build an OData (V2) filter function to test whether a string is a substring of the other. Evaluates to boolean.
 * @param p0 The substring to test for. This can either be a string, a reference to a field or another filter function.
 * @param p1 The string to test. This can either be a string, a reference to a field or another filter function.
 *
 * @returns The newly created filter function
 */
export declare function substringOf<EntityT extends Entity>(p0: string | Field<EntityT> | StringFilterFunction<EntityT>, p1: string | Field<EntityT> | StringFilterFunction<EntityT>): BooleanFilterFunction<EntityT>;
/**
 * Build an OData (V2) filter function to get a substring starting from a designated position. Evaluates to string.
 * @param p0 the original string. This can either be a string, a reference to a field or another filter function.
 * @param pos the starting position of the original string. This can be either a number, a reference to a field or another filter function.
 * @returns The newly created filter function
 */
export declare function substring<EntityT extends Entity>(p0: string | Field<EntityT> | StringFilterFunction<EntityT>, pos: number | Field<EntityT> | NumberFilterFunction<EntityT>): StringFilterFunction<EntityT>;
/**
 * Build an OData (V2) filter function to get the length of a string.
 * @param p0 the given string for computing the length
 * @returns The newly created filter function
 */
export declare function length<EntityT extends Entity>(p0: string | Field<EntityT> | StringFilterFunction<EntityT>): NumberFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'boolean', ...parameters: Array<FilterFunctionParameterType<EntityT>>): BooleanFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'int' | 'double' | 'decimal', ...parameters: Array<FilterFunctionParameterType<EntityT>>): NumberFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'string', ...parameters: Array<FilterFunctionParameterType<EntityT>>): StringFilterFunction<EntityT>;
//# sourceMappingURL=odata-v2-filter-functions.d.ts.map